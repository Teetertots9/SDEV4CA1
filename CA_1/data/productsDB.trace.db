2019-03-15 18:07:05 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "PLAY_EVOLUTIONS" not found; SQL statement:
select id, hash, apply_script, revert_script, state, last_problem from play_evolutions where state like 'applying_%' [42102-197]
2019-03-16 11:47:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
insert into address(address_id, street1, street2, town, post_code) values (1,'123','main st','main rd','dublin','23') [21002-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:306)
	at org.h2.command.Parser.prepareCommand(Parser.java:283)
	at org.h2.engine.Session.prepareLocal(Session.java:611)
	at org.h2.engine.Session.prepareCommand(Session.java:549)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1247)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:217)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.execute(EvolutionsApi.scala:334)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$4(EvolutionsApi.scala:215)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$4$adapted(EvolutionsApi.scala:212)
	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36)
	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:39)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$3(EvolutionsApi.scala:212)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$3$adapted(EvolutionsApi.scala:207)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:207)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:97)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:384)
	at play.core.DefaultWebCommands.$anonfun$handleWebCommand$1(WebCommands.scala:40)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:40)
	at play.core.server.DevServerStart$$anon$1.$anonfun$handleWebCommand$1(DevServerStart.scala:134)
	at scala.Option.flatMap(Option.scala:188)
	at play.core.server.DevServerStart$$anon$1.handleWebCommand(DevServerStart.scala:134)
	at play.core.server.AkkaHttpServer$$anon$2.handleWebCommand(AkkaHttpServer.scala:282)
	at play.core.server.Server$.getHandlerFor(Server.scala:115)
	at play.core.server.AkkaHttpServer.getHandler(AkkaHttpServer.scala:285)
	at play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:256)
	at play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:138)
	at akka.stream.impl.fusing.MapAsyncUnordered$$anon$31.onPush(Ops.scala:1318)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:519)
	at akka.stream.impl.fusing.GraphInterpreter.processEvent(GraphInterpreter.scala:482)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:378)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:588)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:472)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:563)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:745)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:760)
	at akka.actor.Actor.aroundReceive(Actor.scala:517)
	at akka.actor.Actor.aroundReceive$(Actor.scala:515)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:670)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)
	at akka.actor.ActorCell.invoke(ActorCell.scala:557)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)
	at akka.dispatch.Mailbox.run(Mailbox.scala:225)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:235)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2019-03-16 11:48:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
insert into address(address_id, street1, street2, town, post_code) values (1,'123','main st','main rd','dublin','23') [21002-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:306)
	at org.h2.command.Parser.prepareCommand(Parser.java:283)
	at org.h2.engine.Session.prepareLocal(Session.java:611)
	at org.h2.engine.Session.prepareCommand(Session.java:549)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1247)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:217)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.execute(EvolutionsApi.scala:334)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$4(EvolutionsApi.scala:215)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$4$adapted(EvolutionsApi.scala:212)
	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36)
	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:39)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$3(EvolutionsApi.scala:212)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$3$adapted(EvolutionsApi.scala:207)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:207)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:97)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:384)
	at play.core.DefaultWebCommands.$anonfun$handleWebCommand$1(WebCommands.scala:40)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:40)
	at play.core.server.DevServerStart$$anon$1.$anonfun$handleWebCommand$1(DevServerStart.scala:134)
	at scala.Option.flatMap(Option.scala:188)
	at play.core.server.DevServerStart$$anon$1.handleWebCommand(DevServerStart.scala:134)
	at play.core.server.AkkaHttpServer$$anon$2.handleWebCommand(AkkaHttpServer.scala:282)
	at play.core.server.Server$.getHandlerFor(Server.scala:115)
	at play.core.server.AkkaHttpServer.getHandler(AkkaHttpServer.scala:285)
	at play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:256)
	at play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:138)
	at akka.stream.impl.fusing.MapAsyncUnordered$$anon$31.onPush(Ops.scala:1318)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:519)
	at akka.stream.impl.fusing.GraphInterpreter.processEvent(GraphInterpreter.scala:482)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:378)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:588)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:472)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:563)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:745)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:760)
	at akka.actor.Actor.aroundReceive(Actor.scala:517)
	at akka.actor.Actor.aroundReceive$(Actor.scala:515)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:670)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)
	at akka.actor.ActorCell.invoke(ActorCell.scala:557)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)
	at akka.dispatch.Mailbox.run(Mailbox.scala:225)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:235)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
